type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Node {
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Asset!]!

  """The file name"""
  fileName: String!

  """The file handle"""
  handle: String!

  """The height of the file"""
  height: Float

  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned. 
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en]
  ): [Asset!]!
  materialenWerkvorm(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `materialenWerkvorm` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `materialenWerkvorm` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: WerkvormOrderByInput
    skip: Int
    where: WerkvormWhereInput
  ): [Werkvorm!]!

  """The mime type of the file"""
  mimeType: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """The file size"""
  size: Float

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
  videoWerkvorm(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `videoWerkvorm` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `videoWerkvorm` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: WerkvormOrderByInput
    skip: Int
    where: WerkvormWhereInput
  ): [Werkvorm!]!
  werkvormThumbnailWerkvorm(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `werkvormThumbnailWerkvorm` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `werkvormThumbnailWerkvorm` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: WerkvormOrderByInput
    skip: Int
    where: WerkvormWhereInput
  ): [Werkvorm!]!

  """The file width"""
  width: Float
}

input AssetConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: AssetWhereUniqueInput!
}

"""A connection to a list of items."""
type AssetConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [AssetEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input AssetCreateInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
  materialenWerkvorm: WerkvormCreateManyInlineInput
  mimeType: String
  size: Float
  updatedAt: DateTime
  videoWerkvorm: WerkvormCreateManyInlineInput
  werkvormThumbnailWerkvorm: WerkvormCreateManyInlineInput
  width: Float
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float
  mimeType: String
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]

  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]
}

input AssetCreateOneInlineInput {
  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput

  """Create and connect one Asset document"""
  create: AssetCreateInput
}

"""An edge in a connection."""
type AssetEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Asset!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  materialenWerkvorm_every: WerkvormWhereInput
  materialenWerkvorm_none: WerkvormWhereInput
  materialenWerkvorm_some: WerkvormWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  videoWerkvorm_every: WerkvormWhereInput
  videoWerkvorm_none: WerkvormWhereInput
  videoWerkvorm_some: WerkvormWhereInput
  werkvormThumbnailWerkvorm_every: WerkvormWhereInput
  werkvormThumbnailWerkvorm_none: WerkvormWhereInput
  werkvormThumbnailWerkvorm_some: WerkvormWhereInput
}

enum AssetOrderByInput {
  createdAt_ASC
  createdAt_DESC
  fileName_ASC
  fileName_DESC
  handle_ASC
  handle_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  mimeType_ASC
  mimeType_DESC
  publishedAt_ASC
  publishedAt_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  width_ASC
  width_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  document: DocumentTransformationInput
  image: ImageTransformationInput

  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  fileName: String
  handle: String
  height: Float

  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput
  materialenWerkvorm: WerkvormUpdateManyInlineInput
  mimeType: String
  size: Float
  videoWerkvorm: WerkvormUpdateManyInlineInput
  werkvormThumbnailWerkvorm: WerkvormUpdateManyInlineInput
  width: Float
}

input AssetUpdateLocalizationDataInput {
  fileName: String
  handle: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]

  """Localizations to update"""
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
}

input AssetUpdateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]

  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]

  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]

  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]

  """Update multiple Asset documents"""
  update: [AssetUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float

  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: AssetUpdateManyInput!

  """Document search"""
  where: AssetWhereInput!
}

input AssetUpdateOneInlineInput {
  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput

  """Create and connect one Asset document"""
  create: AssetCreateInput

  """Delete currently connected Asset document"""
  delete: Boolean

  """Disconnect currently connected Asset document"""
  disconnect: Boolean

  """Update single Asset document"""
  update: AssetUpdateWithNestedWhereUniqueInput

  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput
}

input AssetUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: AssetUpdateInput!

  """Unique document search"""
  where: AssetWhereUniqueInput!
}

input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!

  """Update document if it exists"""
  update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
  update: AssetUpdateLocalizationDataInput!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: AssetUpsertInput!

  """Unique document search"""
  where: AssetWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input AssetWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input AssetWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  fileName: String

  """All values containing the given string."""
  fileName_contains: String

  """All values ending with the given string."""
  fileName_ends_with: String

  """All values that are contained in given list."""
  fileName_in: [String]

  """Any other value that exists and is not equal to the given value."""
  fileName_not: String

  """All values not containing the given string."""
  fileName_not_contains: String

  """All values not ending with the given string"""
  fileName_not_ends_with: String

  """All values that are not contained in given list."""
  fileName_not_in: [String]

  """All values not starting with the given string."""
  fileName_not_starts_with: String

  """All values starting with the given string."""
  fileName_starts_with: String
  handle: String

  """All values containing the given string."""
  handle_contains: String

  """All values ending with the given string."""
  handle_ends_with: String

  """All values that are contained in given list."""
  handle_in: [String]

  """Any other value that exists and is not equal to the given value."""
  handle_not: String

  """All values not containing the given string."""
  handle_not_contains: String

  """All values not ending with the given string"""
  handle_not_ends_with: String

  """All values that are not contained in given list."""
  handle_not_in: [String]

  """All values not starting with the given string."""
  handle_not_starts_with: String

  """All values starting with the given string."""
  handle_starts_with: String
  height: Float

  """All values greater than the given value."""
  height_gt: Float

  """All values greater than or equal the given value."""
  height_gte: Float

  """All values that are contained in given list."""
  height_in: [Float]

  """All values less than the given value."""
  height_lt: Float

  """All values less than or equal the given value."""
  height_lte: Float

  """Any other value that exists and is not equal to the given value."""
  height_not: Float

  """All values that are not contained in given list."""
  height_not_in: [Float]
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  materialenWerkvorm_every: WerkvormWhereInput
  materialenWerkvorm_none: WerkvormWhereInput
  materialenWerkvorm_some: WerkvormWhereInput
  mimeType: String

  """All values containing the given string."""
  mimeType_contains: String

  """All values ending with the given string."""
  mimeType_ends_with: String

  """All values that are contained in given list."""
  mimeType_in: [String]

  """Any other value that exists and is not equal to the given value."""
  mimeType_not: String

  """All values not containing the given string."""
  mimeType_not_contains: String

  """All values not ending with the given string"""
  mimeType_not_ends_with: String

  """All values that are not contained in given list."""
  mimeType_not_in: [String]

  """All values not starting with the given string."""
  mimeType_not_starts_with: String

  """All values starting with the given string."""
  mimeType_starts_with: String
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float

  """All values that are contained in given list."""
  size_in: [Float]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """Any other value that exists and is not equal to the given value."""
  size_not: Float

  """All values that are not contained in given list."""
  size_not_in: [Float]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  videoWerkvorm_every: WerkvormWhereInput
  videoWerkvorm_none: WerkvormWhereInput
  videoWerkvorm_some: WerkvormWhereInput
  werkvormThumbnailWerkvorm_every: WerkvormWhereInput
  werkvormThumbnailWerkvorm_none: WerkvormWhereInput
  werkvormThumbnailWerkvorm_some: WerkvormWhereInput
  width: Float

  """All values greater than the given value."""
  width_gt: Float

  """All values greater than or equal the given value."""
  width_gte: Float

  """All values that are contained in given list."""
  width_in: [Float]

  """All values less than the given value."""
  width_lt: Float

  """All values less than or equal the given value."""
  width_lte: Float

  """Any other value that exists and is not equal to the given value."""
  width_not: Float

  """All values that are not contained in given list."""
  width_not_in: [Float]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input AssetWhereStageInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: AssetWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Categorie implements Node {
  categorieTitel: String

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Categorie!]!

  """List of Categorie versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input CategorieConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: CategorieWhereUniqueInput!
}

"""A connection to a list of items."""
type CategorieConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [CategorieEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input CategorieCreateInput {
  categorieTitel: String
  createdAt: DateTime
  updatedAt: DateTime
}

input CategorieCreateManyInlineInput {
  """Connect multiple existing Categorie documents"""
  connect: [CategorieWhereUniqueInput!]

  """Create and connect multiple existing Categorie documents"""
  create: [CategorieCreateInput!]
}

input CategorieCreateOneInlineInput {
  """Connect one existing Categorie document"""
  connect: CategorieWhereUniqueInput

  """Create and connect one Categorie document"""
  create: CategorieCreateInput
}

"""An edge in a connection."""
type CategorieEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Categorie!
}

"""Identifies documents"""
input CategorieManyWhereInput {
  """Logical AND on all given filters."""
  AND: [CategorieWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorieWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategorieWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  categorieTitel: String

  """All values containing the given string."""
  categorieTitel_contains: String

  """All values ending with the given string."""
  categorieTitel_ends_with: String

  """All values that are contained in given list."""
  categorieTitel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  categorieTitel_not: String

  """All values not containing the given string."""
  categorieTitel_not_contains: String

  """All values not ending with the given string"""
  categorieTitel_not_ends_with: String

  """All values that are not contained in given list."""
  categorieTitel_not_in: [String]

  """All values not starting with the given string."""
  categorieTitel_not_starts_with: String

  """All values starting with the given string."""
  categorieTitel_starts_with: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: CategorieWhereStageInput
  documentInStages_none: CategorieWhereStageInput
  documentInStages_some: CategorieWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum CategorieOrderByInput {
  categorieTitel_ASC
  categorieTitel_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CategorieUpdateInput {
  categorieTitel: String
}

input CategorieUpdateManyInlineInput {
  """Connect multiple existing Categorie documents"""
  connect: [CategorieConnectInput!]

  """Create and connect multiple Categorie documents"""
  create: [CategorieCreateInput!]

  """Delete multiple Categorie documents"""
  delete: [CategorieWhereUniqueInput!]

  """Disconnect multiple Categorie documents"""
  disconnect: [CategorieWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Categorie documents
  """
  set: [CategorieWhereUniqueInput!]

  """Update multiple Categorie documents"""
  update: [CategorieUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Categorie documents"""
  upsert: [CategorieUpsertWithNestedWhereUniqueInput!]
}

input CategorieUpdateManyInput {
  categorieTitel: String
}

input CategorieUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: CategorieUpdateManyInput!

  """Document search"""
  where: CategorieWhereInput!
}

input CategorieUpdateOneInlineInput {
  """Connect existing Categorie document"""
  connect: CategorieWhereUniqueInput

  """Create and connect one Categorie document"""
  create: CategorieCreateInput

  """Delete currently connected Categorie document"""
  delete: Boolean

  """Disconnect currently connected Categorie document"""
  disconnect: Boolean

  """Update single Categorie document"""
  update: CategorieUpdateWithNestedWhereUniqueInput

  """Upsert single Categorie document"""
  upsert: CategorieUpsertWithNestedWhereUniqueInput
}

input CategorieUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: CategorieUpdateInput!

  """Unique document search"""
  where: CategorieWhereUniqueInput!
}

input CategorieUpsertInput {
  """Create document if it didn't exist"""
  create: CategorieCreateInput!

  """Update document if it exists"""
  update: CategorieUpdateInput!
}

input CategorieUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: CategorieUpsertInput!

  """Unique document search"""
  where: CategorieWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input CategorieWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input CategorieWhereInput {
  """Logical AND on all given filters."""
  AND: [CategorieWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorieWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategorieWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  categorieTitel: String

  """All values containing the given string."""
  categorieTitel_contains: String

  """All values ending with the given string."""
  categorieTitel_ends_with: String

  """All values that are contained in given list."""
  categorieTitel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  categorieTitel_not: String

  """All values not containing the given string."""
  categorieTitel_not_contains: String

  """All values not ending with the given string"""
  categorieTitel_not_ends_with: String

  """All values that are not contained in given list."""
  categorieTitel_not_in: [String]

  """All values not starting with the given string."""
  categorieTitel_not_starts_with: String

  """All values starting with the given string."""
  categorieTitel_starts_with: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: CategorieWhereStageInput
  documentInStages_none: CategorieWhereStageInput
  documentInStages_some: CategorieWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input CategorieWhereStageInput {
  """Logical AND on all given filters."""
  AND: [CategorieWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorieWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [CategorieWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: CategorieWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Categorie record uniquely"""
input CategorieWhereUniqueInput {
  id: ID
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  css: String!
  hex: Hex!
  rgba: RGBA!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID

  """Connect document before specified document"""
  before: ID

  """Connect document at last position"""
  end: Boolean

  """Connect document at first position"""
  start: Boolean
}

type Contactpersoon implements Node {
  achternaam: String

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Contactpersoon!]!

  """List of Contactpersoon versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  voornaam: String
}

input ContactpersoonConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ContactpersoonWhereUniqueInput!
}

"""A connection to a list of items."""
type ContactpersoonConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ContactpersoonEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ContactpersoonCreateInput {
  achternaam: String
  createdAt: DateTime
  updatedAt: DateTime
  voornaam: String
}

input ContactpersoonCreateManyInlineInput {
  """Connect multiple existing Contactpersoon documents"""
  connect: [ContactpersoonWhereUniqueInput!]

  """Create and connect multiple existing Contactpersoon documents"""
  create: [ContactpersoonCreateInput!]
}

input ContactpersoonCreateOneInlineInput {
  """Connect one existing Contactpersoon document"""
  connect: ContactpersoonWhereUniqueInput

  """Create and connect one Contactpersoon document"""
  create: ContactpersoonCreateInput
}

"""An edge in a connection."""
type ContactpersoonEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Contactpersoon!
}

"""Identifies documents"""
input ContactpersoonManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ContactpersoonWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContactpersoonWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContactpersoonWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  achternaam: String

  """All values containing the given string."""
  achternaam_contains: String

  """All values ending with the given string."""
  achternaam_ends_with: String

  """All values that are contained in given list."""
  achternaam_in: [String]

  """Any other value that exists and is not equal to the given value."""
  achternaam_not: String

  """All values not containing the given string."""
  achternaam_not_contains: String

  """All values not ending with the given string"""
  achternaam_not_ends_with: String

  """All values that are not contained in given list."""
  achternaam_not_in: [String]

  """All values not starting with the given string."""
  achternaam_not_starts_with: String

  """All values starting with the given string."""
  achternaam_starts_with: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ContactpersoonWhereStageInput
  documentInStages_none: ContactpersoonWhereStageInput
  documentInStages_some: ContactpersoonWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  voornaam: String

  """All values containing the given string."""
  voornaam_contains: String

  """All values ending with the given string."""
  voornaam_ends_with: String

  """All values that are contained in given list."""
  voornaam_in: [String]

  """Any other value that exists and is not equal to the given value."""
  voornaam_not: String

  """All values not containing the given string."""
  voornaam_not_contains: String

  """All values not ending with the given string"""
  voornaam_not_ends_with: String

  """All values that are not contained in given list."""
  voornaam_not_in: [String]

  """All values not starting with the given string."""
  voornaam_not_starts_with: String

  """All values starting with the given string."""
  voornaam_starts_with: String
}

enum ContactpersoonOrderByInput {
  achternaam_ASC
  achternaam_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  voornaam_ASC
  voornaam_DESC
}

input ContactpersoonUpdateInput {
  achternaam: String
  voornaam: String
}

input ContactpersoonUpdateManyInlineInput {
  """Connect multiple existing Contactpersoon documents"""
  connect: [ContactpersoonConnectInput!]

  """Create and connect multiple Contactpersoon documents"""
  create: [ContactpersoonCreateInput!]

  """Delete multiple Contactpersoon documents"""
  delete: [ContactpersoonWhereUniqueInput!]

  """Disconnect multiple Contactpersoon documents"""
  disconnect: [ContactpersoonWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Contactpersoon documents
  """
  set: [ContactpersoonWhereUniqueInput!]

  """Update multiple Contactpersoon documents"""
  update: [ContactpersoonUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Contactpersoon documents"""
  upsert: [ContactpersoonUpsertWithNestedWhereUniqueInput!]
}

input ContactpersoonUpdateManyInput {
  achternaam: String
  voornaam: String
}

input ContactpersoonUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ContactpersoonUpdateManyInput!

  """Document search"""
  where: ContactpersoonWhereInput!
}

input ContactpersoonUpdateOneInlineInput {
  """Connect existing Contactpersoon document"""
  connect: ContactpersoonWhereUniqueInput

  """Create and connect one Contactpersoon document"""
  create: ContactpersoonCreateInput

  """Delete currently connected Contactpersoon document"""
  delete: Boolean

  """Disconnect currently connected Contactpersoon document"""
  disconnect: Boolean

  """Update single Contactpersoon document"""
  update: ContactpersoonUpdateWithNestedWhereUniqueInput

  """Upsert single Contactpersoon document"""
  upsert: ContactpersoonUpsertWithNestedWhereUniqueInput
}

input ContactpersoonUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ContactpersoonUpdateInput!

  """Unique document search"""
  where: ContactpersoonWhereUniqueInput!
}

input ContactpersoonUpsertInput {
  """Create document if it didn't exist"""
  create: ContactpersoonCreateInput!

  """Update document if it exists"""
  update: ContactpersoonUpdateInput!
}

input ContactpersoonUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ContactpersoonUpsertInput!

  """Unique document search"""
  where: ContactpersoonWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ContactpersoonWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input ContactpersoonWhereInput {
  """Logical AND on all given filters."""
  AND: [ContactpersoonWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContactpersoonWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContactpersoonWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  achternaam: String

  """All values containing the given string."""
  achternaam_contains: String

  """All values ending with the given string."""
  achternaam_ends_with: String

  """All values that are contained in given list."""
  achternaam_in: [String]

  """Any other value that exists and is not equal to the given value."""
  achternaam_not: String

  """All values not containing the given string."""
  achternaam_not_contains: String

  """All values not ending with the given string"""
  achternaam_not_ends_with: String

  """All values that are not contained in given list."""
  achternaam_not_in: [String]

  """All values not starting with the given string."""
  achternaam_not_starts_with: String

  """All values starting with the given string."""
  achternaam_starts_with: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ContactpersoonWhereStageInput
  documentInStages_none: ContactpersoonWhereStageInput
  documentInStages_some: ContactpersoonWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  voornaam: String

  """All values containing the given string."""
  voornaam_contains: String

  """All values ending with the given string."""
  voornaam_ends_with: String

  """All values that are contained in given list."""
  voornaam_in: [String]

  """Any other value that exists and is not equal to the given value."""
  voornaam_not: String

  """All values not containing the given string."""
  voornaam_not_contains: String

  """All values not ending with the given string"""
  voornaam_not_ends_with: String

  """All values that are not contained in given list."""
  voornaam_not_in: [String]

  """All values not starting with the given string."""
  voornaam_not_starts_with: String

  """All values starting with the given string."""
  voornaam_starts_with: String
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ContactpersoonWhereStageInput {
  """Logical AND on all given filters."""
  AND: [ContactpersoonWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContactpersoonWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [ContactpersoonWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ContactpersoonWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Contactpersoon record uniquely"""
input ContactpersoonWhereUniqueInput {
  id: ID
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  doc
  docx
  html
  jpg
  odp
  ods
  odt
  pdf
  png
  ppt
  pptx
  svg
  txt
  webp
  xls
  xlsx
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

type DocumentVersion {
  createdAt: DateTime!
  data: Json
  id: ID!
  revision: Int!
  stage: Stage!
}

type Faculteit implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Faculteit!]!

  """List of Faculteit versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!
  titel: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input FaculteitConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: FaculteitWhereUniqueInput!
}

"""A connection to a list of items."""
type FaculteitConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [FaculteitEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input FaculteitCreateInput {
  createdAt: DateTime
  titel: String
  updatedAt: DateTime
}

input FaculteitCreateManyInlineInput {
  """Connect multiple existing Faculteit documents"""
  connect: [FaculteitWhereUniqueInput!]

  """Create and connect multiple existing Faculteit documents"""
  create: [FaculteitCreateInput!]
}

input FaculteitCreateOneInlineInput {
  """Connect one existing Faculteit document"""
  connect: FaculteitWhereUniqueInput

  """Create and connect one Faculteit document"""
  create: FaculteitCreateInput
}

"""An edge in a connection."""
type FaculteitEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Faculteit!
}

"""Identifies documents"""
input FaculteitManyWhereInput {
  """Logical AND on all given filters."""
  AND: [FaculteitWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FaculteitWhereInput!]

  """Logical OR on all given filters."""
  OR: [FaculteitWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: FaculteitWhereStageInput
  documentInStages_none: FaculteitWhereStageInput
  documentInStages_some: FaculteitWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum FaculteitOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  titel_ASC
  titel_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input FaculteitUpdateInput {
  titel: String
}

input FaculteitUpdateManyInlineInput {
  """Connect multiple existing Faculteit documents"""
  connect: [FaculteitConnectInput!]

  """Create and connect multiple Faculteit documents"""
  create: [FaculteitCreateInput!]

  """Delete multiple Faculteit documents"""
  delete: [FaculteitWhereUniqueInput!]

  """Disconnect multiple Faculteit documents"""
  disconnect: [FaculteitWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Faculteit documents
  """
  set: [FaculteitWhereUniqueInput!]

  """Update multiple Faculteit documents"""
  update: [FaculteitUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Faculteit documents"""
  upsert: [FaculteitUpsertWithNestedWhereUniqueInput!]
}

input FaculteitUpdateManyInput {
  titel: String
}

input FaculteitUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: FaculteitUpdateManyInput!

  """Document search"""
  where: FaculteitWhereInput!
}

input FaculteitUpdateOneInlineInput {
  """Connect existing Faculteit document"""
  connect: FaculteitWhereUniqueInput

  """Create and connect one Faculteit document"""
  create: FaculteitCreateInput

  """Delete currently connected Faculteit document"""
  delete: Boolean

  """Disconnect currently connected Faculteit document"""
  disconnect: Boolean

  """Update single Faculteit document"""
  update: FaculteitUpdateWithNestedWhereUniqueInput

  """Upsert single Faculteit document"""
  upsert: FaculteitUpsertWithNestedWhereUniqueInput
}

input FaculteitUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: FaculteitUpdateInput!

  """Unique document search"""
  where: FaculteitWhereUniqueInput!
}

input FaculteitUpsertInput {
  """Create document if it didn't exist"""
  create: FaculteitCreateInput!

  """Update document if it exists"""
  update: FaculteitUpdateInput!
}

input FaculteitUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: FaculteitUpsertInput!

  """Unique document search"""
  where: FaculteitWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input FaculteitWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input FaculteitWhereInput {
  """Logical AND on all given filters."""
  AND: [FaculteitWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FaculteitWhereInput!]

  """Logical OR on all given filters."""
  OR: [FaculteitWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: FaculteitWhereStageInput
  documentInStages_none: FaculteitWhereStageInput
  documentInStages_some: FaculteitWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input FaculteitWhereStageInput {
  """Logical AND on all given filters."""
  AND: [FaculteitWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FaculteitWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [FaculteitWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: FaculteitWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Faculteit record uniquely"""
input FaculteitWhereUniqueInput {
  id: ID
}

scalar Hex

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max

  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
}

input ImageResizeInput {
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  distance(from: LocationInput!): Float!
  latitude: Float!
  longitude: Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  """Create one asset"""
  createAsset(data: AssetCreateInput!): Asset @deprecated(reason: "Asset mutations will be overhauled soon")

  """Create one categorie"""
  createCategorie(data: CategorieCreateInput!): Categorie

  """Create one contactpersoon"""
  createContactpersoon(data: ContactpersoonCreateInput!): Contactpersoon

  """Create one faculteit"""
  createFaculteit(data: FaculteitCreateInput!): Faculteit

  """Create one opleiding"""
  createOpleiding(data: OpleidingCreateInput!): Opleiding

  """Create one scheduledRelease"""
  createScheduledRelease(data: ScheduledReleaseCreateInput!): ScheduledRelease

  """Create one tag"""
  createTag(data: TagCreateInput!): Tag

  """Create one vak"""
  createVak(data: VakCreateInput!): Vak

  """Create one werkvorm"""
  createWerkvorm(data: WerkvormCreateInput!): Werkvorm

  """Delete one asset from _all_ existing stages. Returns deleted document."""
  deleteAsset(
    """Document to delete"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Delete one categorie from _all_ existing stages. Returns deleted document.
  """
  deleteCategorie(
    """Document to delete"""
    where: CategorieWhereUniqueInput!
  ): Categorie

  """
  Delete one contactpersoon from _all_ existing stages. Returns deleted document.
  """
  deleteContactpersoon(
    """Document to delete"""
    where: ContactpersoonWhereUniqueInput!
  ): Contactpersoon

  """
  Delete one faculteit from _all_ existing stages. Returns deleted document.
  """
  deleteFaculteit(
    """Document to delete"""
    where: FaculteitWhereUniqueInput!
  ): Faculteit

  """Delete many Asset documents"""
  deleteManyAssets(
    """Documents to delete"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)")

  """Delete many Asset documents, return deleted documents"""
  deleteManyAssetsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Delete many Categorie documents"""
  deleteManyCategories(
    """Documents to delete"""
    where: CategorieManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyCategoriesConnection)")

  """Delete many Categorie documents, return deleted documents"""
  deleteManyCategoriesConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: CategorieManyWhereInput
  ): CategorieConnection!

  """Delete many Contactpersoon documents"""
  deleteManyContactpersoons(
    """Documents to delete"""
    where: ContactpersoonManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyContactpersoonsConnection)")

  """Delete many Contactpersoon documents, return deleted documents"""
  deleteManyContactpersoonsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: ContactpersoonManyWhereInput
  ): ContactpersoonConnection!

  """Delete many Faculteit documents"""
  deleteManyFaculteits(
    """Documents to delete"""
    where: FaculteitManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyFaculteitsConnection)")

  """Delete many Faculteit documents, return deleted documents"""
  deleteManyFaculteitsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: FaculteitManyWhereInput
  ): FaculteitConnection!

  """Delete many Opleiding documents"""
  deleteManyOpleidings(
    """Documents to delete"""
    where: OpleidingManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyOpleidingsConnection)")

  """Delete many Opleiding documents, return deleted documents"""
  deleteManyOpleidingsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: OpleidingManyWhereInput
  ): OpleidingConnection!

  """Delete many Tag documents"""
  deleteManyTags(
    """Documents to delete"""
    where: TagManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyTagsConnection)")

  """Delete many Tag documents, return deleted documents"""
  deleteManyTagsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: TagManyWhereInput
  ): TagConnection!

  """Delete many Vak documents"""
  deleteManyVaks(
    """Documents to delete"""
    where: VakManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyVaksConnection)")

  """Delete many Vak documents, return deleted documents"""
  deleteManyVaksConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: VakManyWhereInput
  ): VakConnection!

  """Delete many Werkvorm documents"""
  deleteManyWerkvormen(
    """Documents to delete"""
    where: WerkvormManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyWerkvormenConnection)")

  """Delete many Werkvorm documents, return deleted documents"""
  deleteManyWerkvormenConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """Documents to delete"""
    where: WerkvormManyWhereInput
  ): WerkvormConnection!

  """
  Delete one opleiding from _all_ existing stages. Returns deleted document.
  """
  deleteOpleiding(
    """Document to delete"""
    where: OpleidingWhereUniqueInput!
  ): Opleiding

  """Delete and return scheduled operation"""
  deleteScheduledOperation(
    """Document to delete"""
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  deleteScheduledRelease(
    """Document to delete"""
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """Delete one tag from _all_ existing stages. Returns deleted document."""
  deleteTag(
    """Document to delete"""
    where: TagWhereUniqueInput!
  ): Tag

  """Delete one vak from _all_ existing stages. Returns deleted document."""
  deleteVak(
    """Document to delete"""
    where: VakWhereUniqueInput!
  ): Vak

  """
  Delete one werkvorm from _all_ existing stages. Returns deleted document.
  """
  deleteWerkvorm(
    """Document to delete"""
    where: WerkvormWhereUniqueInput!
  ): Werkvorm

  """Publish one asset"""
  publishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset

  """Publish one categorie"""
  publishCategorie(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: CategorieWhereUniqueInput!
  ): Categorie

  """Publish one contactpersoon"""
  publishContactpersoon(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: ContactpersoonWhereUniqueInput!
  ): Contactpersoon

  """Publish one faculteit"""
  publishFaculteit(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: FaculteitWhereUniqueInput!
  ): Faculteit

  """Publish many Asset documents"""
  publishManyAssets(
    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyAssetsConnection)")

  """Publish many Asset documents"""
  publishManyAssetsConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int

    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): AssetConnection!

  """Publish many Categorie documents"""
  publishManyCategories(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: CategorieManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyCategoriesConnection)")

  """Publish many Categorie documents"""
  publishManyCategoriesConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: CategorieManyWhereInput
  ): CategorieConnection!

  """Publish many Contactpersoon documents"""
  publishManyContactpersoons(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: ContactpersoonManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyContactpersoonsConnection)")

  """Publish many Contactpersoon documents"""
  publishManyContactpersoonsConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: ContactpersoonManyWhereInput
  ): ContactpersoonConnection!

  """Publish many Faculteit documents"""
  publishManyFaculteits(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: FaculteitManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyFaculteitsConnection)")

  """Publish many Faculteit documents"""
  publishManyFaculteitsConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: FaculteitManyWhereInput
  ): FaculteitConnection!

  """Publish many Opleiding documents"""
  publishManyOpleidings(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: OpleidingManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyOpleidingsConnection)")

  """Publish many Opleiding documents"""
  publishManyOpleidingsConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: OpleidingManyWhereInput
  ): OpleidingConnection!

  """Publish many Tag documents"""
  publishManyTags(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: TagManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyTagsConnection)")

  """Publish many Tag documents"""
  publishManyTagsConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: TagManyWhereInput
  ): TagConnection!

  """Publish many Vak documents"""
  publishManyVaks(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: VakManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyVaksConnection)")

  """Publish many Vak documents"""
  publishManyVaksConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: VakManyWhereInput
  ): VakConnection!

  """Publish many Werkvorm documents"""
  publishManyWerkvormen(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: WerkvormManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyWerkvormenConnection)")

  """Publish many Werkvorm documents"""
  publishManyWerkvormenConnection(
    after: ID
    before: ID
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: WerkvormManyWhereInput
  ): WerkvormConnection!

  """Publish one opleiding"""
  publishOpleiding(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: OpleidingWhereUniqueInput!
  ): Opleiding

  """Publish one tag"""
  publishTag(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: TagWhereUniqueInput!
  ): Tag

  """Publish one vak"""
  publishVak(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: VakWhereUniqueInput!
  ): Vak

  """Publish one werkvorm"""
  publishWerkvorm(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: WerkvormWhereUniqueInput!
  ): Werkvorm

  """Schedule to publish one asset"""
  schedulePublishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset

  """Schedule to publish one categorie"""
  schedulePublishCategorie(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: CategorieWhereUniqueInput!
  ): Categorie

  """Schedule to publish one contactpersoon"""
  schedulePublishContactpersoon(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: ContactpersoonWhereUniqueInput!
  ): Contactpersoon

  """Schedule to publish one faculteit"""
  schedulePublishFaculteit(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: FaculteitWhereUniqueInput!
  ): Faculteit

  """Schedule to publish one opleiding"""
  schedulePublishOpleiding(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: OpleidingWhereUniqueInput!
  ): Opleiding

  """Schedule to publish one tag"""
  schedulePublishTag(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: TagWhereUniqueInput!
  ): Tag

  """Schedule to publish one vak"""
  schedulePublishVak(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: VakWhereUniqueInput!
  ): Vak

  """Schedule to publish one werkvorm"""
  schedulePublishWerkvorm(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: WerkvormWhereUniqueInput!
  ): Werkvorm

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one categorie from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishCategorie(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: CategorieWhereUniqueInput!
  ): Categorie

  """
  Unpublish one contactpersoon from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishContactpersoon(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: ContactpersoonWhereUniqueInput!
  ): Contactpersoon

  """
  Unpublish one faculteit from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishFaculteit(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: FaculteitWhereUniqueInput!
  ): Faculteit

  """
  Unpublish one opleiding from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishOpleiding(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: OpleidingWhereUniqueInput!
  ): Opleiding

  """
  Unpublish one tag from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishTag(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: TagWhereUniqueInput!
  ): Tag

  """
  Unpublish one vak from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishVak(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: VakWhereUniqueInput!
  ): Vak

  """
  Unpublish one werkvorm from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishWerkvorm(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: WerkvormWhereUniqueInput!
  ): Werkvorm

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one categorie from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishCategorie(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: CategorieWhereUniqueInput!
  ): Categorie

  """
  Unpublish one contactpersoon from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishContactpersoon(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: ContactpersoonWhereUniqueInput!
  ): Contactpersoon

  """
  Unpublish one faculteit from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishFaculteit(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: FaculteitWhereUniqueInput!
  ): Faculteit

  """Unpublish many Asset documents"""
  unpublishManyAssets(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Locales to unpublish"""
    locales: [Locale!]

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in each stage"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)")

  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int

    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in draft stage"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Unpublish many Categorie documents"""
  unpublishManyCategories(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: CategorieManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyCategoriesConnection)")

  """
  Find many Categorie documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyCategoriesConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: CategorieManyWhereInput
  ): CategorieConnection!

  """Unpublish many Contactpersoon documents"""
  unpublishManyContactpersoons(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: ContactpersoonManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyContactpersoonsConnection)")

  """
  Find many Contactpersoon documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyContactpersoonsConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: ContactpersoonManyWhereInput
  ): ContactpersoonConnection!

  """Unpublish many Faculteit documents"""
  unpublishManyFaculteits(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: FaculteitManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyFaculteitsConnection)")

  """
  Find many Faculteit documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyFaculteitsConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: FaculteitManyWhereInput
  ): FaculteitConnection!

  """Unpublish many Opleiding documents"""
  unpublishManyOpleidings(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: OpleidingManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyOpleidingsConnection)")

  """
  Find many Opleiding documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyOpleidingsConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: OpleidingManyWhereInput
  ): OpleidingConnection!

  """Unpublish many Tag documents"""
  unpublishManyTags(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: TagManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyTagsConnection)")

  """
  Find many Tag documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyTagsConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: TagManyWhereInput
  ): TagConnection!

  """Unpublish many Vak documents"""
  unpublishManyVaks(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: VakManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyVaksConnection)")

  """
  Find many Vak documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyVaksConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: VakManyWhereInput
  ): VakConnection!

  """Unpublish many Werkvorm documents"""
  unpublishManyWerkvormen(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: WerkvormManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyWerkvormenConnection)")

  """
  Find many Werkvorm documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyWerkvormenConnection(
    after: ID
    before: ID
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: WerkvormManyWhereInput
  ): WerkvormConnection!

  """
  Unpublish one opleiding from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishOpleiding(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: OpleidingWhereUniqueInput!
  ): Opleiding

  """
  Unpublish one tag from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishTag(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: TagWhereUniqueInput!
  ): Tag

  """
  Unpublish one vak from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishVak(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: VakWhereUniqueInput!
  ): Vak

  """
  Unpublish one werkvorm from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishWerkvorm(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: WerkvormWhereUniqueInput!
  ): Werkvorm

  """Update one asset"""
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset

  """Update one categorie"""
  updateCategorie(data: CategorieUpdateInput!, where: CategorieWhereUniqueInput!): Categorie

  """Update one contactpersoon"""
  updateContactpersoon(data: ContactpersoonUpdateInput!, where: ContactpersoonWhereUniqueInput!): Contactpersoon

  """Update one faculteit"""
  updateFaculteit(data: FaculteitUpdateInput!, where: FaculteitWhereUniqueInput!): Faculteit

  """Update many assets"""
  updateManyAssets(
    """Updates to document content"""
    data: AssetUpdateManyInput!

    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyAssetsConnection)")

  """Update many Asset documents"""
  updateManyAssetsConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: AssetUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Update many categories"""
  updateManyCategories(
    """Updates to document content"""
    data: CategorieUpdateManyInput!

    """Documents to apply update on"""
    where: CategorieManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyCategoriesConnection)")

  """Update many Categorie documents"""
  updateManyCategoriesConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: CategorieUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: CategorieManyWhereInput
  ): CategorieConnection!

  """Update many contactpersoons"""
  updateManyContactpersoons(
    """Updates to document content"""
    data: ContactpersoonUpdateManyInput!

    """Documents to apply update on"""
    where: ContactpersoonManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyContactpersoonsConnection)")

  """Update many Contactpersoon documents"""
  updateManyContactpersoonsConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: ContactpersoonUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: ContactpersoonManyWhereInput
  ): ContactpersoonConnection!

  """Update many faculteits"""
  updateManyFaculteits(
    """Updates to document content"""
    data: FaculteitUpdateManyInput!

    """Documents to apply update on"""
    where: FaculteitManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyFaculteitsConnection)")

  """Update many Faculteit documents"""
  updateManyFaculteitsConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: FaculteitUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: FaculteitManyWhereInput
  ): FaculteitConnection!

  """Update many opleidings"""
  updateManyOpleidings(
    """Updates to document content"""
    data: OpleidingUpdateManyInput!

    """Documents to apply update on"""
    where: OpleidingManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyOpleidingsConnection)")

  """Update many Opleiding documents"""
  updateManyOpleidingsConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: OpleidingUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: OpleidingManyWhereInput
  ): OpleidingConnection!

  """Update many tags"""
  updateManyTags(
    """Updates to document content"""
    data: TagUpdateManyInput!

    """Documents to apply update on"""
    where: TagManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyTagsConnection)")

  """Update many Tag documents"""
  updateManyTagsConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: TagUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: TagManyWhereInput
  ): TagConnection!

  """Update many vaks"""
  updateManyVaks(
    """Updates to document content"""
    data: VakUpdateManyInput!

    """Documents to apply update on"""
    where: VakManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyVaksConnection)")

  """Update many Vak documents"""
  updateManyVaksConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: VakUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: VakManyWhereInput
  ): VakConnection!

  """Update many werkvormen"""
  updateManyWerkvormen(
    """Updates to document content"""
    data: WerkvormUpdateManyInput!

    """Documents to apply update on"""
    where: WerkvormManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyWerkvormenConnection)")

  """Update many Werkvorm documents"""
  updateManyWerkvormenConnection(
    after: ID
    before: ID

    """Updates to document content"""
    data: WerkvormUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """Documents to apply update on"""
    where: WerkvormManyWhereInput
  ): WerkvormConnection!

  """Update one opleiding"""
  updateOpleiding(data: OpleidingUpdateInput!, where: OpleidingWhereUniqueInput!): Opleiding

  """Update one scheduledRelease"""
  updateScheduledRelease(data: ScheduledReleaseUpdateInput!, where: ScheduledReleaseWhereUniqueInput!): ScheduledRelease

  """Update one tag"""
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag

  """Update one vak"""
  updateVak(data: VakUpdateInput!, where: VakWhereUniqueInput!): Vak

  """Update one werkvorm"""
  updateWerkvorm(data: WerkvormUpdateInput!, where: WerkvormWhereUniqueInput!): Werkvorm

  """Upsert one asset"""
  upsertAsset(upsert: AssetUpsertInput!, where: AssetWhereUniqueInput!): Asset

  """Upsert one categorie"""
  upsertCategorie(upsert: CategorieUpsertInput!, where: CategorieWhereUniqueInput!): Categorie

  """Upsert one contactpersoon"""
  upsertContactpersoon(upsert: ContactpersoonUpsertInput!, where: ContactpersoonWhereUniqueInput!): Contactpersoon

  """Upsert one faculteit"""
  upsertFaculteit(upsert: FaculteitUpsertInput!, where: FaculteitWhereUniqueInput!): Faculteit

  """Upsert one opleiding"""
  upsertOpleiding(upsert: OpleidingUpsertInput!, where: OpleidingWhereUniqueInput!): Opleiding

  """Upsert one tag"""
  upsertTag(upsert: TagUpsertInput!, where: TagWhereUniqueInput!): Tag

  """Upsert one vak"""
  upsertVak(upsert: VakUpsertInput!, where: VakWhereUniqueInput!): Vak

  """Upsert one werkvorm"""
  upsertWerkvorm(upsert: WerkvormUpsertInput!, where: WerkvormWhereUniqueInput!): Werkvorm
}

enum Niveau {
  AD
  Bachelor
  Master
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!

  """The Stage of an object"""
  stage: Stage!
}

type Opleiding implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Opleiding!]!

  """List of Opleiding versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!
  niveau: Niveau

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!
  titel: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input OpleidingConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: OpleidingWhereUniqueInput!
}

"""A connection to a list of items."""
type OpleidingConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [OpleidingEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input OpleidingCreateInput {
  createdAt: DateTime
  niveau: Niveau
  titel: String
  updatedAt: DateTime
}

input OpleidingCreateManyInlineInput {
  """Connect multiple existing Opleiding documents"""
  connect: [OpleidingWhereUniqueInput!]

  """Create and connect multiple existing Opleiding documents"""
  create: [OpleidingCreateInput!]
}

input OpleidingCreateOneInlineInput {
  """Connect one existing Opleiding document"""
  connect: OpleidingWhereUniqueInput

  """Create and connect one Opleiding document"""
  create: OpleidingCreateInput
}

"""An edge in a connection."""
type OpleidingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Opleiding!
}

"""Identifies documents"""
input OpleidingManyWhereInput {
  """Logical AND on all given filters."""
  AND: [OpleidingWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OpleidingWhereInput!]

  """Logical OR on all given filters."""
  OR: [OpleidingWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: OpleidingWhereStageInput
  documentInStages_none: OpleidingWhereStageInput
  documentInStages_some: OpleidingWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  niveau: Niveau

  """All values that are contained in given list."""
  niveau_in: [Niveau]

  """Any other value that exists and is not equal to the given value."""
  niveau_not: Niveau

  """All values that are not contained in given list."""
  niveau_not_in: [Niveau]
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum OpleidingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  niveau_ASC
  niveau_DESC
  publishedAt_ASC
  publishedAt_DESC
  titel_ASC
  titel_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OpleidingUpdateInput {
  niveau: Niveau
  titel: String
}

input OpleidingUpdateManyInlineInput {
  """Connect multiple existing Opleiding documents"""
  connect: [OpleidingConnectInput!]

  """Create and connect multiple Opleiding documents"""
  create: [OpleidingCreateInput!]

  """Delete multiple Opleiding documents"""
  delete: [OpleidingWhereUniqueInput!]

  """Disconnect multiple Opleiding documents"""
  disconnect: [OpleidingWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Opleiding documents
  """
  set: [OpleidingWhereUniqueInput!]

  """Update multiple Opleiding documents"""
  update: [OpleidingUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Opleiding documents"""
  upsert: [OpleidingUpsertWithNestedWhereUniqueInput!]
}

input OpleidingUpdateManyInput {
  niveau: Niveau
  titel: String
}

input OpleidingUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: OpleidingUpdateManyInput!

  """Document search"""
  where: OpleidingWhereInput!
}

input OpleidingUpdateOneInlineInput {
  """Connect existing Opleiding document"""
  connect: OpleidingWhereUniqueInput

  """Create and connect one Opleiding document"""
  create: OpleidingCreateInput

  """Delete currently connected Opleiding document"""
  delete: Boolean

  """Disconnect currently connected Opleiding document"""
  disconnect: Boolean

  """Update single Opleiding document"""
  update: OpleidingUpdateWithNestedWhereUniqueInput

  """Upsert single Opleiding document"""
  upsert: OpleidingUpsertWithNestedWhereUniqueInput
}

input OpleidingUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: OpleidingUpdateInput!

  """Unique document search"""
  where: OpleidingWhereUniqueInput!
}

input OpleidingUpsertInput {
  """Create document if it didn't exist"""
  create: OpleidingCreateInput!

  """Update document if it exists"""
  update: OpleidingUpdateInput!
}

input OpleidingUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: OpleidingUpsertInput!

  """Unique document search"""
  where: OpleidingWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input OpleidingWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input OpleidingWhereInput {
  """Logical AND on all given filters."""
  AND: [OpleidingWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OpleidingWhereInput!]

  """Logical OR on all given filters."""
  OR: [OpleidingWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: OpleidingWhereStageInput
  documentInStages_none: OpleidingWhereStageInput
  documentInStages_some: OpleidingWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  niveau: Niveau

  """All values that are contained in given list."""
  niveau_in: [Niveau]

  """Any other value that exists and is not equal to the given value."""
  niveau_not: Niveau

  """All values that are not contained in given list."""
  niveau_not_in: [Niveau]
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input OpleidingWhereStageInput {
  """Logical AND on all given filters."""
  AND: [OpleidingWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OpleidingWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [OpleidingWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: OpleidingWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Opleiding record uniquely"""
input OpleidingWhereUniqueInput {
  id: ID
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """Number of items in the current page."""
  pageSize: Int

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!

  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

type Query {
  """Retrieve a single asset"""
  asset(
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: AssetWhereUniqueInput!
  ): Asset

  """Retrieve document version"""
  assetVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple assets"""
  assets(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): [Asset!]!

  """Retrieve multiple assets using the Relay connection interface"""
  assetsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): AssetConnection!

  """Retrieve a single categorie"""
  categorie(
    """
    Defines which locales should be returned.
    
    Note that `Categorie` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: CategorieWhereUniqueInput!
  ): Categorie

  """Retrieve document version"""
  categorieVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple categories"""
  categories(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Categorie` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CategorieOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CategorieWhereInput
  ): [Categorie!]!

  """Retrieve multiple categories using the Relay connection interface"""
  categoriesConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Categorie` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CategorieOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CategorieWhereInput
  ): CategorieConnection!

  """Retrieve a single contactpersoon"""
  contactpersoon(
    """
    Defines which locales should be returned.
    
    Note that `Contactpersoon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ContactpersoonWhereUniqueInput!
  ): Contactpersoon

  """Retrieve document version"""
  contactpersoonVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple contactpersoons"""
  contactpersoons(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Contactpersoon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ContactpersoonOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ContactpersoonWhereInput
  ): [Contactpersoon!]!

  """Retrieve multiple contactpersoons using the Relay connection interface"""
  contactpersoonsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Contactpersoon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ContactpersoonOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ContactpersoonWhereInput
  ): ContactpersoonConnection!

  """Retrieve a single faculteit"""
  faculteit(
    """
    Defines which locales should be returned.
    
    Note that `Faculteit` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: FaculteitWhereUniqueInput!
  ): Faculteit

  """Retrieve document version"""
  faculteitVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple faculteits"""
  faculteits(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Faculteit` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: FaculteitOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: FaculteitWhereInput
  ): [Faculteit!]!

  """Retrieve multiple faculteits using the Relay connection interface"""
  faculteitsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Faculteit` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: FaculteitOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: FaculteitWhereInput
  ): FaculteitConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!

    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
  ): Node

  """Retrieve a single opleiding"""
  opleiding(
    """
    Defines which locales should be returned.
    
    Note that `Opleiding` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: OpleidingWhereUniqueInput!
  ): Opleiding

  """Retrieve document version"""
  opleidingVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple opleidings"""
  opleidings(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Opleiding` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: OpleidingOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: OpleidingWhereInput
  ): [Opleiding!]!

  """Retrieve multiple opleidings using the Relay connection interface"""
  opleidingsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Opleiding` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: OpleidingOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: OpleidingWhereInput
  ): OpleidingConnection!

  """Retrieve a single scheduledOperation"""
  scheduledOperation(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """Retrieve multiple scheduledOperations"""
  scheduledOperations(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): ScheduledOperationConnection!

  """Retrieve a single scheduledRelease"""
  scheduledRelease(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """Retrieve multiple scheduledReleases"""
  scheduledReleases(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): [ScheduledRelease!]!

  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): ScheduledReleaseConnection!

  """Retrieve a single tag"""
  tag(
    """
    Defines which locales should be returned.
    
    Note that `Tag` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: TagWhereUniqueInput!
  ): Tag

  """Retrieve document version"""
  tagVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple tags"""
  tags(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Tag` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: TagOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: TagWhereInput
  ): [Tag!]!

  """Retrieve multiple tags using the Relay connection interface"""
  tagsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Tag` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: TagOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: TagWhereInput
  ): TagConnection!

  """Retrieve a single user"""
  user(
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: UserWhereUniqueInput!
  ): User

  """Retrieve multiple users"""
  users(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): [User!]!

  """Retrieve multiple users using the Relay connection interface"""
  usersConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): UserConnection!

  """Retrieve a single vak"""
  vak(
    """
    Defines which locales should be returned.
    
    Note that `Vak` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: VakWhereUniqueInput!
  ): Vak

  """Retrieve document version"""
  vakVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple vaks"""
  vaks(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Vak` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: VakOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: VakWhereInput
  ): [Vak!]!

  """Retrieve multiple vaks using the Relay connection interface"""
  vaksConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Vak` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: VakOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: VakWhereInput
  ): VakConnection!

  """Retrieve a single werkvorm"""
  werkvorm(
    """
    Defines which locales should be returned.
    
    Note that `Werkvorm` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: WerkvormWhereUniqueInput!
  ): Werkvorm

  """Retrieve document version"""
  werkvormVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple werkvormen"""
  werkvormen(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Werkvorm` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: WerkvormOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: WerkvormWhereInput
  ): [Werkvorm!]!

  """Retrieve multiple werkvormen using the Relay connection interface"""
  werkvormenConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Werkvorm` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: WerkvormOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: WerkvormWhereInput
  ): WerkvormConnection!
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns HTMl representation"""
  html: String!

  """Returns Markdown representation"""
  markdown: String!

  """Returns AST representation"""
  raw: RichTextAST!

  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

"""Scheduled Operation system model"""
type ScheduledOperation implements Node {
  affectedDocuments(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
  ): [ScheduledOperationAffectedDocument!]!

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Operation description"""
  description: String

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledOperation!]!

  """Operation error message"""
  errorMessage: String

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!

  """The release this operation is scheduled for"""
  release(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease

  """System stage field"""
  stage: Stage!

  """operation Status"""
  status: ScheduledOperationStatus!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

union ScheduledOperationAffectedDocument = Asset | Categorie | Contactpersoon | Faculteit | Opleiding | Tag | Vak | Werkvorm

input ScheduledOperationConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ScheduledOperationWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledOperationConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ScheduledOperationEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ScheduledOperationCreateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationCreateOneInlineInput {
  """Connect one existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
}

"""An edge in a connection."""
type ScheduledOperationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ScheduledOperation!
}

"""Identifies documents"""
input ScheduledOperationManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """Any other value that exists and is not equal to the given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput

  """All values containing the given json path."""
  rawPayload_json_path_exists: String

  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus

  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]

  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledOperationStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledOperationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""System Scheduled Operation Status"""
enum ScheduledOperationStatus {
  CANCELED
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledOperationUpdateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationConnectInput!]

  """Disconnect multiple ScheduledOperation documents"""
  disconnect: [ScheduledOperationWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationUpdateOneInlineInput {
  """Connect existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput

  """Disconnect currently connected ScheduledOperation document"""
  disconnect: Boolean
}

"""Identifies documents"""
input ScheduledOperationWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """Any other value that exists and is not equal to the given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput

  """All values containing the given json path."""
  rawPayload_json_path_exists: String

  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus

  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]

  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledOperationStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""References ScheduledOperation record uniquely"""
input ScheduledOperationWhereUniqueInput {
  id: ID
}

"""Scheduled Release system model"""
type ScheduledRelease implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Release description"""
  description: String

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledRelease!]!

  """Release error message"""
  errorMessage: String

  """The unique identifier"""
  id: ID!

  """Whether scheduled release should be run"""
  isActive: Boolean!

  """Whether scheduled release is implicit"""
  isImplicit: Boolean!

  """Operations to run with this release"""
  operations(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Release date and time"""
  releaseAt: DateTime

  """System stage field"""
  stage: Stage!

  """Release Status"""
  status: ScheduledReleaseStatus!

  """Release Title"""
  title: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ScheduledReleaseConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledReleaseConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ScheduledReleaseEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ScheduledReleaseCreateInput {
  createdAt: DateTime
  description: String
  errorMessage: String
  isActive: Boolean = true
  releaseAt: DateTime
  title: String
  updatedAt: DateTime
}

input ScheduledReleaseCreateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseWhereUniqueInput!]

  """Create and connect multiple existing ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
}

input ScheduledReleaseCreateOneInlineInput {
  """Connect one existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput

  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
}

"""An edge in a connection."""
type ScheduledReleaseEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ScheduledRelease!
}

"""Identifies documents"""
input ScheduledReleaseManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """Any other value that exists and is not equal to the given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  isImplicit: Boolean

  """Any other value that exists and is not equal to the given value."""
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime

  """All values greater than the given value."""
  releaseAt_gt: DateTime

  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime

  """All values that are contained in given list."""
  releaseAt_in: [DateTime]

  """All values less than the given value."""
  releaseAt_lt: DateTime

  """All values less than or equal the given value."""
  releaseAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  releaseAt_not: DateTime

  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus

  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]

  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledReleaseStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """Any other value that exists and is not equal to the given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledReleaseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  isImplicit_ASC
  isImplicit_DESC
  publishedAt_ASC
  publishedAt_DESC
  releaseAt_ASC
  releaseAt_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""System Scheduled Release Status"""
enum ScheduledReleaseStatus {
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledReleaseUpdateInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseConnectInput!]

  """Create and connect multiple ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]

  """Delete multiple ScheduledRelease documents"""
  delete: [ScheduledReleaseWhereUniqueInput!]

  """Disconnect multiple ScheduledRelease documents"""
  disconnect: [ScheduledReleaseWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]

  """Update multiple ScheduledRelease documents"""
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple ScheduledRelease documents"""
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
}

input ScheduledReleaseUpdateManyInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ScheduledReleaseUpdateManyInput!

  """Document search"""
  where: ScheduledReleaseWhereInput!
}

input ScheduledReleaseUpdateOneInlineInput {
  """Connect existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput

  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput

  """Delete currently connected ScheduledRelease document"""
  delete: Boolean

  """Disconnect currently connected ScheduledRelease document"""
  disconnect: Boolean

  """Update single ScheduledRelease document"""
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput

  """Upsert single ScheduledRelease document"""
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
}

input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ScheduledReleaseUpdateInput!

  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

input ScheduledReleaseUpsertInput {
  """Create document if it didn't exist"""
  create: ScheduledReleaseCreateInput!

  """Update document if it exists"""
  update: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ScheduledReleaseUpsertInput!

  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""Identifies documents"""
input ScheduledReleaseWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String]

  """Any other value that exists and is not equal to the given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String]

  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  isImplicit: Boolean

  """Any other value that exists and is not equal to the given value."""
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime

  """All values greater than the given value."""
  releaseAt_gt: DateTime

  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime

  """All values that are contained in given list."""
  releaseAt_in: [DateTime]

  """All values less than the given value."""
  releaseAt_lt: DateTime

  """All values less than or equal the given value."""
  releaseAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  releaseAt_not: DateTime

  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus

  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]

  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledReleaseStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """Any other value that exists and is not equal to the given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""References ScheduledRelease record uniquely"""
input ScheduledReleaseWhereUniqueInput {
  id: ID
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT

  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  COMBINED
  LOCALIZATION
}

type Tag implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Tag!]!

  """List of Tag versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!

  """Titel voor de tag"""
  titel: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input TagConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: TagWhereUniqueInput!
}

"""A connection to a list of items."""
type TagConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [TagEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input TagCreateInput {
  createdAt: DateTime
  titel: String
  updatedAt: DateTime
}

input TagCreateManyInlineInput {
  """Connect multiple existing Tag documents"""
  connect: [TagWhereUniqueInput!]

  """Create and connect multiple existing Tag documents"""
  create: [TagCreateInput!]
}

input TagCreateOneInlineInput {
  """Connect one existing Tag document"""
  connect: TagWhereUniqueInput

  """Create and connect one Tag document"""
  create: TagCreateInput
}

"""An edge in a connection."""
type TagEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Tag!
}

"""Identifies documents"""
input TagManyWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: TagWhereStageInput
  documentInStages_none: TagWhereStageInput
  documentInStages_some: TagWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum TagOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  titel_ASC
  titel_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input TagUpdateInput {
  titel: String
}

input TagUpdateManyInlineInput {
  """Connect multiple existing Tag documents"""
  connect: [TagConnectInput!]

  """Create and connect multiple Tag documents"""
  create: [TagCreateInput!]

  """Delete multiple Tag documents"""
  delete: [TagWhereUniqueInput!]

  """Disconnect multiple Tag documents"""
  disconnect: [TagWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Tag documents
  """
  set: [TagWhereUniqueInput!]

  """Update multiple Tag documents"""
  update: [TagUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Tag documents"""
  upsert: [TagUpsertWithNestedWhereUniqueInput!]
}

input TagUpdateManyInput {
  titel: String
}

input TagUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: TagUpdateManyInput!

  """Document search"""
  where: TagWhereInput!
}

input TagUpdateOneInlineInput {
  """Connect existing Tag document"""
  connect: TagWhereUniqueInput

  """Create and connect one Tag document"""
  create: TagCreateInput

  """Delete currently connected Tag document"""
  delete: Boolean

  """Disconnect currently connected Tag document"""
  disconnect: Boolean

  """Update single Tag document"""
  update: TagUpdateWithNestedWhereUniqueInput

  """Upsert single Tag document"""
  upsert: TagUpsertWithNestedWhereUniqueInput
}

input TagUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: TagUpdateInput!

  """Unique document search"""
  where: TagWhereUniqueInput!
}

input TagUpsertInput {
  """Create document if it didn't exist"""
  create: TagCreateInput!

  """Update document if it exists"""
  update: TagUpdateInput!
}

input TagUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: TagUpsertInput!

  """Unique document search"""
  where: TagWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input TagWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input TagWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: TagWhereStageInput
  documentInStages_none: TagWhereStageInput
  documentInStages_some: TagWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input TagWhereStageInput {
  """Logical AND on all given filters."""
  AND: [TagWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: TagWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Tag record uniquely"""
input TagWhereUniqueInput {
  id: ID
}

enum Tags {
  Duurzaamheid
  Ik
  Persoonlijke_interesses
}

type Tijdsduur {
  duur: Int

  """The unique identifier"""
  id: ID!

  """System stage field"""
  stage: Stage!

  """Tijdsindicator van een werkvorm"""
  tijdsindicator: Tijdsindicator
}

input TijdsduurConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: TijdsduurWhereUniqueInput!
}

"""A connection to a list of items."""
type TijdsduurConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [TijdsduurEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input TijdsduurCreateInput {
  duur: Int
  tijdsindicator: Tijdsindicator
}

input TijdsduurCreateManyInlineInput {
  """Create and connect multiple existing Tijdsduur documents"""
  create: [TijdsduurCreateInput!]
}

input TijdsduurCreateOneInlineInput {
  """Create and connect one Tijdsduur document"""
  create: TijdsduurCreateInput
}

input TijdsduurCreateWithPositionInput {
  """Document to create"""
  data: TijdsduurCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""An edge in a connection."""
type TijdsduurEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Tijdsduur!
}

"""Identifies documents"""
input TijdsduurManyWhereInput {
  """Logical AND on all given filters."""
  AND: [TijdsduurWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TijdsduurWhereInput!]

  """Logical OR on all given filters."""
  OR: [TijdsduurWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  duur: Int

  """All values greater than the given value."""
  duur_gt: Int

  """All values greater than or equal the given value."""
  duur_gte: Int

  """All values that are contained in given list."""
  duur_in: [Int]

  """All values less than the given value."""
  duur_lt: Int

  """All values less than or equal the given value."""
  duur_lte: Int

  """Any other value that exists and is not equal to the given value."""
  duur_not: Int

  """All values that are not contained in given list."""
  duur_not_in: [Int]
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  tijdsindicator: Tijdsindicator

  """All values that are contained in given list."""
  tijdsindicator_in: [Tijdsindicator]

  """Any other value that exists and is not equal to the given value."""
  tijdsindicator_not: Tijdsindicator

  """All values that are not contained in given list."""
  tijdsindicator_not_in: [Tijdsindicator]
}

enum TijdsduurOrderByInput {
  duur_ASC
  duur_DESC
  id_ASC
  id_DESC
  tijdsindicator_ASC
  tijdsindicator_DESC
}

union TijdsduurParent = Werkvorm

input TijdsduurParentConnectInput {
  Werkvorm: WerkvormConnectInput
}

input TijdsduurParentCreateInput {
  Werkvorm: WerkvormCreateInput
}

input TijdsduurParentCreateManyInlineInput {
  """Connect multiple existing TijdsduurParent documents"""
  connect: [TijdsduurParentWhereUniqueInput!]

  """Create and connect multiple existing TijdsduurParent documents"""
  create: [TijdsduurParentCreateInput!]
}

input TijdsduurParentCreateOneInlineInput {
  """Connect one existing TijdsduurParent document"""
  connect: TijdsduurParentWhereUniqueInput

  """Create and connect one TijdsduurParent document"""
  create: TijdsduurParentCreateInput
}

input TijdsduurParentUpdateInput {
  Werkvorm: WerkvormUpdateInput
}

input TijdsduurParentUpdateManyInlineInput {
  """Connect multiple existing TijdsduurParent documents"""
  connect: [TijdsduurParentConnectInput!]

  """Create and connect multiple TijdsduurParent documents"""
  create: [TijdsduurParentCreateInput!]

  """Delete multiple TijdsduurParent documents"""
  delete: [TijdsduurParentWhereUniqueInput!]

  """Disconnect multiple TijdsduurParent documents"""
  disconnect: [TijdsduurParentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing TijdsduurParent documents
  """
  set: [TijdsduurParentWhereUniqueInput!]

  """Update multiple TijdsduurParent documents"""
  update: [TijdsduurParentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple TijdsduurParent documents"""
  upsert: [TijdsduurParentUpsertWithNestedWhereUniqueInput!]
}

input TijdsduurParentUpdateManyWithNestedWhereInput {
  Werkvorm: WerkvormUpdateManyWithNestedWhereInput
}

input TijdsduurParentUpdateOneInlineInput {
  """Connect existing TijdsduurParent document"""
  connect: TijdsduurParentWhereUniqueInput

  """Create and connect one TijdsduurParent document"""
  create: TijdsduurParentCreateInput

  """Delete currently connected TijdsduurParent document"""
  delete: Boolean

  """Disconnect currently connected TijdsduurParent document"""
  disconnect: Boolean

  """Update single TijdsduurParent document"""
  update: TijdsduurParentUpdateWithNestedWhereUniqueInput

  """Upsert single TijdsduurParent document"""
  upsert: TijdsduurParentUpsertWithNestedWhereUniqueInput
}

input TijdsduurParentUpdateWithNestedWhereUniqueInput {
  Werkvorm: WerkvormUpdateWithNestedWhereUniqueInput
}

input TijdsduurParentUpsertWithNestedWhereUniqueInput {
  Werkvorm: WerkvormUpsertWithNestedWhereUniqueInput
}

input TijdsduurParentWhereInput {
  Werkvorm: WerkvormWhereInput
}

input TijdsduurParentWhereUniqueInput {
  Werkvorm: WerkvormWhereUniqueInput
}

input TijdsduurUpdateInput {
  duur: Int
  tijdsindicator: Tijdsindicator
}

input TijdsduurUpdateManyInlineInput {
  """Create and connect multiple Tijdsduur component instances"""
  create: [TijdsduurCreateWithPositionInput!]

  """Delete multiple Tijdsduur documents"""
  delete: [TijdsduurWhereUniqueInput!]

  """Update multiple Tijdsduur component instances"""
  update: [TijdsduurUpdateWithNestedWhereUniqueAndPositionInput!]

  """Upsert multiple Tijdsduur component instances"""
  upsert: [TijdsduurUpsertWithNestedWhereUniqueAndPositionInput!]
}

input TijdsduurUpdateManyInput {
  duur: Int
  tijdsindicator: Tijdsindicator
}

input TijdsduurUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: TijdsduurUpdateManyInput!

  """Document search"""
  where: TijdsduurWhereInput!
}

input TijdsduurUpdateOneInlineInput {
  """Create and connect one Tijdsduur document"""
  create: TijdsduurCreateInput

  """Delete currently connected Tijdsduur document"""
  delete: Boolean

  """Update single Tijdsduur document"""
  update: TijdsduurUpdateWithNestedWhereUniqueInput

  """Upsert single Tijdsduur document"""
  upsert: TijdsduurUpsertWithNestedWhereUniqueInput
}

input TijdsduurUpdateWithNestedWhereUniqueAndPositionInput {
  """Document to update"""
  data: TijdsduurUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: TijdsduurWhereUniqueInput!
}

input TijdsduurUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: TijdsduurUpdateInput!

  """Unique document search"""
  where: TijdsduurWhereUniqueInput!
}

input TijdsduurUpsertInput {
  """Create document if it didn't exist"""
  create: TijdsduurCreateInput!

  """Update document if it exists"""
  update: TijdsduurUpdateInput!
}

input TijdsduurUpsertWithNestedWhereUniqueAndPositionInput {
  """Document to upsert"""
  data: TijdsduurUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """Unique component instance search"""
  where: TijdsduurWhereUniqueInput!
}

input TijdsduurUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: TijdsduurUpsertInput!

  """Unique document search"""
  where: TijdsduurWhereUniqueInput!
}

"""Identifies documents"""
input TijdsduurWhereInput {
  """Logical AND on all given filters."""
  AND: [TijdsduurWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TijdsduurWhereInput!]

  """Logical OR on all given filters."""
  OR: [TijdsduurWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  duur: Int

  """All values greater than the given value."""
  duur_gt: Int

  """All values greater than or equal the given value."""
  duur_gte: Int

  """All values that are contained in given list."""
  duur_in: [Int]

  """All values less than the given value."""
  duur_lt: Int

  """All values less than or equal the given value."""
  duur_lte: Int

  """Any other value that exists and is not equal to the given value."""
  duur_not: Int

  """All values that are not contained in given list."""
  duur_not_in: [Int]
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  tijdsindicator: Tijdsindicator

  """All values that are contained in given list."""
  tijdsindicator_in: [Tijdsindicator]

  """Any other value that exists and is not equal to the given value."""
  tijdsindicator_not: Tijdsindicator

  """All values that are not contained in given list."""
  tijdsindicator_not_in: [Tijdsindicator]
}

"""References Tijdsduur record uniquely"""
input TijdsduurWhereUniqueInput {
  id: ID
}

"""Tijdsduur van een werkvorm"""
enum Tijdsindicator {
  Blok
  Les
  Lessen
}

input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!

  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [User!]!

  """The unique identifier"""
  id: ID!

  """Flag to determine if user is active or not"""
  isActive: Boolean!

  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!

  """The username"""
  name: String!

  """Profile Picture url"""
  picture: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt: DateTime!
}

input UserConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: UserWhereUniqueInput!
}

"""A connection to a list of items."""
type UserConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [UserEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User!
}

"""System User Kind"""
enum UserKind {
  APP_TOKEN
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  kind: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind]

  """Any other value that exists and is not equal to the given value."""
  kind_not: UserKind

  """All values that are not contained in given list."""
  kind_not_in: [UserKind]
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String]

  """Any other value that exists and is not equal to the given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String
  picture: String

  """All values containing the given string."""
  picture_contains: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values that are contained in given list."""
  picture_in: [String]

  """Any other value that exists and is not equal to the given value."""
  picture_not: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values not ending with the given string"""
  picture_not_ends_with: String

  """All values that are not contained in given list."""
  picture_not_in: [String]

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values starting with the given string."""
  picture_starts_with: String
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]

  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput

  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""
This contains a set of filters that can be used to compare values internally
"""
input UserWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean

  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  kind: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind]

  """Any other value that exists and is not equal to the given value."""
  kind_not: UserKind

  """All values that are not contained in given list."""
  kind_not_in: [UserKind]
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String]

  """Any other value that exists and is not equal to the given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String
  picture: String

  """All values containing the given string."""
  picture_contains: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values that are contained in given list."""
  picture_in: [String]

  """Any other value that exists and is not equal to the given value."""
  picture_not: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values not ending with the given string"""
  picture_not_ends_with: String

  """All values that are not contained in given list."""
  picture_not_in: [String]

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values starting with the given string."""
  picture_starts_with: String
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input UserWhereStageInput {
  """Logical AND on all given filters."""
  AND: [UserWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: UserWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  id: ID
}

type Vak implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Vak!]!

  """List of Vak versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!
  titel: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input VakConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: VakWhereUniqueInput!
}

"""A connection to a list of items."""
type VakConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [VakEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input VakCreateInput {
  createdAt: DateTime
  titel: String
  updatedAt: DateTime
}

input VakCreateManyInlineInput {
  """Connect multiple existing Vak documents"""
  connect: [VakWhereUniqueInput!]

  """Create and connect multiple existing Vak documents"""
  create: [VakCreateInput!]
}

input VakCreateOneInlineInput {
  """Connect one existing Vak document"""
  connect: VakWhereUniqueInput

  """Create and connect one Vak document"""
  create: VakCreateInput
}

"""An edge in a connection."""
type VakEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Vak!
}

"""Identifies documents"""
input VakManyWhereInput {
  """Logical AND on all given filters."""
  AND: [VakWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VakWhereInput!]

  """Logical OR on all given filters."""
  OR: [VakWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: VakWhereStageInput
  documentInStages_none: VakWhereStageInput
  documentInStages_some: VakWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum VakOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  titel_ASC
  titel_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input VakUpdateInput {
  titel: String
}

input VakUpdateManyInlineInput {
  """Connect multiple existing Vak documents"""
  connect: [VakConnectInput!]

  """Create and connect multiple Vak documents"""
  create: [VakCreateInput!]

  """Delete multiple Vak documents"""
  delete: [VakWhereUniqueInput!]

  """Disconnect multiple Vak documents"""
  disconnect: [VakWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Vak documents
  """
  set: [VakWhereUniqueInput!]

  """Update multiple Vak documents"""
  update: [VakUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Vak documents"""
  upsert: [VakUpsertWithNestedWhereUniqueInput!]
}

input VakUpdateManyInput {
  titel: String
}

input VakUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: VakUpdateManyInput!

  """Document search"""
  where: VakWhereInput!
}

input VakUpdateOneInlineInput {
  """Connect existing Vak document"""
  connect: VakWhereUniqueInput

  """Create and connect one Vak document"""
  create: VakCreateInput

  """Delete currently connected Vak document"""
  delete: Boolean

  """Disconnect currently connected Vak document"""
  disconnect: Boolean

  """Update single Vak document"""
  update: VakUpdateWithNestedWhereUniqueInput

  """Upsert single Vak document"""
  upsert: VakUpsertWithNestedWhereUniqueInput
}

input VakUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: VakUpdateInput!

  """Unique document search"""
  where: VakWhereUniqueInput!
}

input VakUpsertInput {
  """Create document if it didn't exist"""
  create: VakCreateInput!

  """Update document if it exists"""
  update: VakUpdateInput!
}

input VakUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: VakUpsertInput!

  """Unique document search"""
  where: VakWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input VakWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input VakWhereInput {
  """Logical AND on all given filters."""
  AND: [VakWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VakWhereInput!]

  """Logical OR on all given filters."""
  OR: [VakWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: VakWhereStageInput
  documentInStages_none: VakWhereStageInput
  documentInStages_some: VakWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  titel: String

  """All values containing the given string."""
  titel_contains: String

  """All values ending with the given string."""
  titel_ends_with: String

  """All values that are contained in given list."""
  titel_in: [String]

  """Any other value that exists and is not equal to the given value."""
  titel_not: String

  """All values not containing the given string."""
  titel_not_contains: String

  """All values not ending with the given string"""
  titel_not_ends_with: String

  """All values that are not contained in given list."""
  titel_not_in: [String]

  """All values not starting with the given string."""
  titel_not_starts_with: String

  """All values starting with the given string."""
  titel_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input VakWhereStageInput {
  """Logical AND on all given filters."""
  AND: [VakWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VakWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [VakWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: VakWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Vak record uniquely"""
input VakWhereUniqueInput {
  id: ID
}

type Version {
  createdAt: DateTime!
  id: ID!
  revision: Int!
  stage: Stage!
}

input VersionWhereInput {
  id: ID!
  revision: Int!
  stage: Stage!
}

"Model voor werkvormen\n"
type Werkvorm implements Node {
  """Beschrijving voor de werkvorm"""
  beschrijving: String!

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Werkvorm!]!

  """List of Werkvorm versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!
  materialen(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `materialen` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `materialen` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: AssetOrderByInput
    skip: Int
    where: AssetWhereInput
  ): [Asset!]!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int

    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!
  studiejaar: Int
  tags: [Tags!]!

  "Thumbnail voor de werkvorm\n"
  thumbnail(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `thumbnail` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `thumbnail` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!

  """Tijdsduur van een werkvorm"""
  tijdsduur(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `tijdsduur` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `tijdsduur` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Tijdsduur

  """Titel voor de werkvorm"""
  title: String!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  video(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `video` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `video` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
}

input WerkvormConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: WerkvormWhereUniqueInput!
}

"""A connection to a list of items."""
type WerkvormConnection {
  aggregate: Aggregate!

  """A list of edges."""
  edges: [WerkvormEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input WerkvormCreateInput {
  beschrijving: String!
  createdAt: DateTime
  materialen: AssetCreateManyInlineInput
  studiejaar: Int
  tags: [Tags!]
  thumbnail: AssetCreateOneInlineInput!
  tijdsduur: TijdsduurCreateOneInlineInput
  title: String!
  updatedAt: DateTime
  video: AssetCreateOneInlineInput
}

input WerkvormCreateManyInlineInput {
  """Connect multiple existing Werkvorm documents"""
  connect: [WerkvormWhereUniqueInput!]

  """Create and connect multiple existing Werkvorm documents"""
  create: [WerkvormCreateInput!]
}

input WerkvormCreateOneInlineInput {
  """Connect one existing Werkvorm document"""
  connect: WerkvormWhereUniqueInput

  """Create and connect one Werkvorm document"""
  create: WerkvormCreateInput
}

"""An edge in a connection."""
type WerkvormEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Werkvorm!
}

"""Identifies documents"""
input WerkvormManyWhereInput {
  """Logical AND on all given filters."""
  AND: [WerkvormWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WerkvormWhereInput!]

  """Logical OR on all given filters."""
  OR: [WerkvormWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  beschrijving: String

  """All values containing the given string."""
  beschrijving_contains: String

  """All values ending with the given string."""
  beschrijving_ends_with: String

  """All values that are contained in given list."""
  beschrijving_in: [String]

  """Any other value that exists and is not equal to the given value."""
  beschrijving_not: String

  """All values not containing the given string."""
  beschrijving_not_contains: String

  """All values not ending with the given string"""
  beschrijving_not_ends_with: String

  """All values that are not contained in given list."""
  beschrijving_not_in: [String]

  """All values not starting with the given string."""
  beschrijving_not_starts_with: String

  """All values starting with the given string."""
  beschrijving_starts_with: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: WerkvormWhereStageInput
  documentInStages_none: WerkvormWhereStageInput
  documentInStages_some: WerkvormWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  materialen_every: AssetWhereInput
  materialen_none: AssetWhereInput
  materialen_some: AssetWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  studiejaar: Int

  """All values greater than the given value."""
  studiejaar_gt: Int

  """All values greater than or equal the given value."""
  studiejaar_gte: Int

  """All values that are contained in given list."""
  studiejaar_in: [Int]

  """All values less than the given value."""
  studiejaar_lt: Int

  """All values less than or equal the given value."""
  studiejaar_lte: Int

  """Any other value that exists and is not equal to the given value."""
  studiejaar_not: Int

  """All values that are not contained in given list."""
  studiejaar_not_in: [Int]

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  tags: [Tags!]

  """Matches if the field array contains *all* items provided to the filter"""
  tags_contains_all: [Tags!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  tags_contains_none: [Tags!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  tags_contains_some: [Tags!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  tags_not: [Tags!]
  thumbnail: AssetWhereInput
  tijdsduur: TijdsduurWhereInput
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """Any other value that exists and is not equal to the given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  video: AssetWhereInput
}

enum WerkvormOrderByInput {
  beschrijving_ASC
  beschrijving_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  studiejaar_ASC
  studiejaar_DESC
  tags_ASC
  tags_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input WerkvormUpdateInput {
  beschrijving: String
  materialen: AssetUpdateManyInlineInput
  studiejaar: Int
  tags: [Tags!]
  thumbnail: AssetUpdateOneInlineInput
  tijdsduur: TijdsduurUpdateOneInlineInput
  title: String
  video: AssetUpdateOneInlineInput
}

input WerkvormUpdateManyInlineInput {
  """Connect multiple existing Werkvorm documents"""
  connect: [WerkvormConnectInput!]

  """Create and connect multiple Werkvorm documents"""
  create: [WerkvormCreateInput!]

  """Delete multiple Werkvorm documents"""
  delete: [WerkvormWhereUniqueInput!]

  """Disconnect multiple Werkvorm documents"""
  disconnect: [WerkvormWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Werkvorm documents
  """
  set: [WerkvormWhereUniqueInput!]

  """Update multiple Werkvorm documents"""
  update: [WerkvormUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Werkvorm documents"""
  upsert: [WerkvormUpsertWithNestedWhereUniqueInput!]
}

input WerkvormUpdateManyInput {
  beschrijving: String
  studiejaar: Int
  tags: [Tags!]
  title: String
}

input WerkvormUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: WerkvormUpdateManyInput!

  """Document search"""
  where: WerkvormWhereInput!
}

input WerkvormUpdateOneInlineInput {
  """Connect existing Werkvorm document"""
  connect: WerkvormWhereUniqueInput

  """Create and connect one Werkvorm document"""
  create: WerkvormCreateInput

  """Delete currently connected Werkvorm document"""
  delete: Boolean

  """Disconnect currently connected Werkvorm document"""
  disconnect: Boolean

  """Update single Werkvorm document"""
  update: WerkvormUpdateWithNestedWhereUniqueInput

  """Upsert single Werkvorm document"""
  upsert: WerkvormUpsertWithNestedWhereUniqueInput
}

input WerkvormUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: WerkvormUpdateInput!

  """Unique document search"""
  where: WerkvormWhereUniqueInput!
}

input WerkvormUpsertInput {
  """Create document if it didn't exist"""
  create: WerkvormCreateInput!

  """Update document if it exists"""
  update: WerkvormUpdateInput!
}

input WerkvormUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: WerkvormUpsertInput!

  """Unique document search"""
  where: WerkvormWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input WerkvormWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input WerkvormWhereInput {
  """Logical AND on all given filters."""
  AND: [WerkvormWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WerkvormWhereInput!]

  """Logical OR on all given filters."""
  OR: [WerkvormWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String
  beschrijving: String

  """All values containing the given string."""
  beschrijving_contains: String

  """All values ending with the given string."""
  beschrijving_ends_with: String

  """All values that are contained in given list."""
  beschrijving_in: [String]

  """Any other value that exists and is not equal to the given value."""
  beschrijving_not: String

  """All values not containing the given string."""
  beschrijving_not_contains: String

  """All values not ending with the given string"""
  beschrijving_not_ends_with: String

  """All values that are not contained in given list."""
  beschrijving_not_in: [String]

  """All values not starting with the given string."""
  beschrijving_not_starts_with: String

  """All values starting with the given string."""
  beschrijving_starts_with: String
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: WerkvormWhereStageInput
  documentInStages_none: WerkvormWhereStageInput
  documentInStages_some: WerkvormWhereStageInput
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID]

  """Any other value that exists and is not equal to the given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID
  materialen_every: AssetWhereInput
  materialen_none: AssetWhereInput
  materialen_some: AssetWhereInput
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  studiejaar: Int

  """All values greater than the given value."""
  studiejaar_gt: Int

  """All values greater than or equal the given value."""
  studiejaar_gte: Int

  """All values that are contained in given list."""
  studiejaar_in: [Int]

  """All values less than the given value."""
  studiejaar_lt: Int

  """All values less than or equal the given value."""
  studiejaar_lte: Int

  """Any other value that exists and is not equal to the given value."""
  studiejaar_not: Int

  """All values that are not contained in given list."""
  studiejaar_not_in: [Int]

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  tags: [Tags!]

  """Matches if the field array contains *all* items provided to the filter"""
  tags_contains_all: [Tags!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  tags_contains_none: [Tags!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  tags_contains_some: [Tags!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  tags_not: [Tags!]
  thumbnail: AssetWhereInput
  tijdsduur: TijdsduurWhereInput
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String]

  """Any other value that exists and is not equal to the given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  video: AssetWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input WerkvormWhereStageInput {
  """Logical AND on all given filters."""
  AND: [WerkvormWhereStageInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WerkvormWhereStageInput!]

  """Logical OR on all given filters."""
  OR: [WerkvormWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: WerkvormWhereComparatorInput

  """Specify the stage to compare with"""
  stage: Stage
}

"""References Werkvorm record uniquely"""
input WerkvormWhereUniqueInput {
  id: ID
}

enum _FilterKind {
  AND
  NOT
  OR
  contains
  contains_all
  contains_none
  contains_some
  ends_with
  eq
  eq_not
  gt
  gte
  in
  json_path_exists
  json_value_recursive
  lt
  lte
  not_contains
  not_ends_with
  not_in
  not_starts_with
  relational_every
  relational_none
  relational_single
  relational_some
  search
  starts_with
  union_empty
  union_every
  union_none
  union_single
  union_some
}

enum _MutationInputFieldKind {
  enum
  relation
  richText
  richTextWithEmbeds
  scalar
  union
  virtual
}

enum _MutationKind {
  create
  delete
  deleteMany
  publish
  publishMany
  schedulePublish
  scheduleUnpublish
  unpublish
  unpublishMany
  update
  updateMany
  upsert
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  many
  one
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum _SystemDateTimeFieldVariation {
  base
  combined
  localization
}